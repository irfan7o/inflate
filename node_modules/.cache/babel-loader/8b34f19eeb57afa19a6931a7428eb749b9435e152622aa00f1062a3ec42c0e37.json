{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\Code\\\\Inflate\\\\src\\\\components\\\\SimpleInflationCalculator.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { motion } from 'framer-motion';\nimport { Calculator, ArrowRight, TrendingUp } from 'lucide-react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, ResponsiveContainer, Area, AreaChart } from 'recharts';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SimpleInflationCalculator = ({\n  countryData,\n  selectedCountry\n}) => {\n  _s();\n  const [amount, setAmount] = useState('100000');\n  const [startYear, setStartYear] = useState(2000);\n  const [endYear, setEndYear] = useState(2025);\n  const [result, setResult] = useState(null);\n  const availableYears = countryData.data.map(item => item.year).sort();\n  const minYear = Math.min(...availableYears);\n  const maxYear = Math.max(...availableYears);\n  const calculateInflation = () => {\n    if (!amount || startYear >= endYear) return;\n    const startAmount = parseFloat(amount);\n    let currentValue = startAmount;\n    const yearlyValues = [{\n      year: startYear,\n      value: startAmount\n    }];\n\n    // Calculate compound inflation from start year to end year\n    for (let year = startYear + 1; year <= endYear; year++) {\n      const yearData = countryData.data.find(item => item.year === year);\n      if (yearData) {\n        const inflationRate = yearData.rate / 100;\n        currentValue = currentValue * (1 + inflationRate);\n        yearlyValues.push({\n          year,\n          value: currentValue\n        });\n      }\n    }\n    const totalInflation = (currentValue - startAmount) / startAmount * 100;\n    const averageInflation = totalInflation / (endYear - startYear);\n\n    // Get CPI data for display\n    const startCPI = 100; // Base CPI\n    const endCPI = startCPI * (currentValue / startAmount);\n    setResult({\n      originalAmount: startAmount,\n      inflatedAmount: currentValue,\n      totalInflation: totalInflation,\n      averageInflation: averageInflation,\n      yearRange: endYear - startYear,\n      startCPI: startCPI,\n      endCPI: endCPI,\n      yearlyValues: yearlyValues\n    });\n  };\n  const formatCurrency = value => {\n    return new Intl.NumberFormat('id-ID', {\n      style: 'currency',\n      currency: countryData.currency,\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }).format(value);\n  };\n  const formatNumber = value => {\n    return new Intl.NumberFormat('id-ID', {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    }).format(value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-primary text-white py-8\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-4xl mx-auto px-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-bold mb-2\",\n          children: \"Inflation Calculator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-blue-100\",\n          children: \"This tool displays the time value of money based on historical inflation and CPI data.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-4xl mx-auto px-6 py-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-50 rounded-lg p-6 mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-4 gap-4 items-end\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium text-gray-700 mb-2\",\n              children: \"Country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relative\",\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                value: selectedCountry,\n                className: \"w-full bg-white border border-gray-300 rounded-lg px-4 py-3 text-gray-700 focus:border-primary focus:outline-none appearance-none cursor-pointer\",\n                children: /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: selectedCountry,\n                  children: [countryData.flag, \" \", selectedCountry]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium text-gray-700 mb-2\",\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: amount,\n              onChange: e => setAmount(e.target.value.replace(/[^0-9]/g, '')),\n              className: \"w-full bg-white border border-gray-300 rounded-lg px-4 py-3 text-gray-700 focus:border-primary focus:outline-none\",\n              placeholder: \"100000\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium text-gray-700 mb-2\",\n              children: \"Start year\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: startYear,\n              onChange: e => setStartYear(parseInt(e.target.value)),\n              className: \"w-full bg-white border border-gray-300 rounded-lg px-4 py-3 text-gray-700 focus:border-primary focus:outline-none appearance-none cursor-pointer\",\n              children: availableYears.filter(year => year < maxYear).map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: year,\n                children: year\n              }, year, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium text-gray-700 mb-2\",\n              children: \"End year\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: endYear,\n              onChange: e => setEndYear(parseInt(e.target.value)),\n              className: \"w-full bg-white border border-gray-300 rounded-lg px-4 py-3 text-gray-700 focus:border-primary focus:outline-none appearance-none cursor-pointer\",\n              children: availableYears.filter(year => year > startYear).map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: year,\n                children: year\n              }, year, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: calculateInflation,\n            disabled: !amount || startYear >= endYear,\n            className: \"bg-success hover:bg-green-600 text-white px-8 py-3 rounded-lg font-medium disabled:opacity-50 disabled:cursor-not-allowed flex items-center space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Calculate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ArrowRight, {\n              className: \"w-4 h-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), result && /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0,\n          y: 20\n        },\n        animate: {\n          opacity: 1,\n          y: 0\n        },\n        transition: {\n          duration: 0.5\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-bold text-gray-900 mb-4\",\n            children: [\"Value of \", startYear, \" \", selectedCountry, \" \", countryData.currencySymbol.replace(/[^A-Za-z]/g, ''), \" today\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-center space-x-8 mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-3xl font-bold text-primary mb-2\",\n                children: formatCurrency(result.originalAmount)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-gray-500\",\n                children: [\"in \", startYear]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ArrowRight, {\n              className: \"w-8 h-8 text-gray-400\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-3xl font-bold text-primary mb-2\",\n                children: formatCurrency(result.inflatedAmount)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-gray-500\",\n                children: [\"in \", endYear]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-50 rounded-lg p-6\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-700 leading-relaxed\",\n              children: [\"The inflation rate in \", selectedCountry, \" between \", startYear, \" and today has been\", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [result.totalInflation.toFixed(2), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 19\n              }, this), \", which translates into a total increase of\", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: formatCurrency(result.inflatedAmount - result.originalAmount)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 19\n              }, this), \". This means that\", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [formatCurrency(result.originalAmount), \" in \", startYear, \" are equivalent to \", formatCurrency(result.inflatedAmount), \" in \", endYear]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 19\n              }, this), \". In other words, the purchasing power of \", formatCurrency(result.originalAmount), \" in \", startYear, \" equals\", ' ', formatCurrency(result.inflatedAmount), \" today. The average annual inflation rate between these periods has been\", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [result.averageInflation.toFixed(2), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 19\n              }, this), \".\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 lg:grid-cols-3 gap-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"lg:col-span-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-xl font-bold text-gray-900 mb-4\",\n              children: [\"Inflation timeline in \", selectedCountry, \" (\", startYear, \" - \", endYear, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-600 text-sm mb-4\",\n              children: [\"The following chart depicts the equivalence of \", formatCurrency(result.originalAmount), \" due to compound inflation and CPI changes. All values are equivalent in terms of purchasing power, which means that for each year the same goods or services could be bought with the indicated amount of money.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"h-80 bg-gray-50 rounded-lg p-4\",\n              children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n                width: \"100%\",\n                height: \"100%\",\n                children: /*#__PURE__*/_jsxDEV(AreaChart, {\n                  data: result.yearlyValues,\n                  children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n                    children: /*#__PURE__*/_jsxDEV(\"linearGradient\", {\n                      id: \"colorValue\",\n                      x1: \"0\",\n                      y1: \"0\",\n                      x2: \"0\",\n                      y2: \"1\",\n                      children: [/*#__PURE__*/_jsxDEV(\"stop\", {\n                        offset: \"5%\",\n                        stopColor: \"#3B82F6\",\n                        stopOpacity: 0.3\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 224,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"stop\", {\n                        offset: \"95%\",\n                        stopColor: \"#3B82F6\",\n                        stopOpacity: 0.1\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 225,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 223,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 222,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n                    strokeDasharray: \"3 3\",\n                    stroke: \"#E5E7EB\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                    dataKey: \"year\",\n                    stroke: \"#6B7280\",\n                    fontSize: 12\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 229,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                    stroke: \"#6B7280\",\n                    fontSize: 12,\n                    tickFormatter: value => formatCurrency(value).replace(/\\D/g, '') + 'k'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Area, {\n                    type: \"monotone\",\n                    dataKey: \"value\",\n                    stroke: \"#3B82F6\",\n                    strokeWidth: 2,\n                    fillOpacity: 1,\n                    fill: \"url(#colorValue)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 239,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-xl font-bold text-gray-900 mb-4\",\n              children: [\"Value of \", countryData.currencySymbol.replace(/[^A-Za-z]/g, ''), \" over time (by year)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-gray-50 rounded-lg p-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-sm text-gray-600 mb-1\",\n                  children: \"Cumulative inflation\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-2xl font-bold text-gray-900\",\n                  children: [result.totalInflation.toFixed(2), \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-xs text-gray-500\",\n                  children: [\"From \", startYear]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-gray-50 rounded-lg p-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-sm text-gray-600 mb-1\",\n                  children: \"Avg. annual inflation\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-2xl font-bold text-gray-900\",\n                  children: [result.averageInflation.toFixed(2), \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-xs text-gray-500\",\n                  children: [\"From \", startYear]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-gray-50 rounded-lg p-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-sm text-gray-600 mb-1\",\n                  children: [\"CPI \", startYear]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-2xl font-bold text-gray-900\",\n                  children: formatNumber(result.startCPI)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-gray-50 rounded-lg p-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-sm text-gray-600 mb-1\",\n                  children: \"CPI today\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-2xl font-bold text-gray-900\",\n                  children: formatNumber(result.endCPI)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-6\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-gray-50 rounded-lg p-4 max-h-64 overflow-y-auto\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"grid grid-cols-2 gap-2 text-sm\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"font-semibold text-gray-700\",\n                    children: \"Period\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 286,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"font-semibold text-gray-700\",\n                    children: \"Value\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 287,\n                    columnNumber: 23\n                  }, this), result.yearlyValues.slice(0, 10).map((item, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-gray-600\",\n                      children: item.year\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 290,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-gray-900 font-medium\",\n                      children: [formatCurrency(item.value).replace(/\\D/g, ''), \".\", formatCurrency(item.value).slice(-3)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 291,\n                      columnNumber: 27\n                    }, this)]\n                  }, item.year, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 25\n                  }, this)), result.yearlyValues.length > 10 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-gray-400\",\n                      children: \"...\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 298,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-gray-400\",\n                      children: \"...\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 299,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInflationCalculator, \"TDCsxPP/Z/W7XyLrDNXpXgXry48=\");\n_c = SimpleInflationCalculator;\nexport default SimpleInflationCalculator;\nvar _c;\n$RefreshReg$(_c, \"SimpleInflationCalculator\");","map":{"version":3,"names":["React","useState","motion","Calculator","ArrowRight","TrendingUp","LineChart","Line","XAxis","YAxis","CartesianGrid","ResponsiveContainer","Area","AreaChart","jsxDEV","_jsxDEV","Fragment","_Fragment","SimpleInflationCalculator","countryData","selectedCountry","_s","amount","setAmount","startYear","setStartYear","endYear","setEndYear","result","setResult","availableYears","data","map","item","year","sort","minYear","Math","min","maxYear","max","calculateInflation","startAmount","parseFloat","currentValue","yearlyValues","value","yearData","find","inflationRate","rate","push","totalInflation","averageInflation","startCPI","endCPI","originalAmount","inflatedAmount","yearRange","formatCurrency","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","formatNumber","className","children","fileName","_jsxFileName","lineNumber","columnNumber","flag","type","onChange","e","target","replace","placeholder","parseInt","filter","onClick","disabled","div","initial","opacity","y","animate","transition","duration","currencySymbol","toFixed","width","height","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","strokeDasharray","stroke","dataKey","fontSize","tickFormatter","strokeWidth","fillOpacity","fill","slice","index","length","_c","$RefreshReg$"],"sources":["C:/Users/USER/Documents/Code/Inflate/src/components/SimpleInflationCalculator.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { Calculator, ArrowRight, TrendingUp } from 'lucide-react';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, ResponsiveContainer, Area, AreaChart } from 'recharts';\r\n\r\nconst SimpleInflationCalculator = ({ countryData, selectedCountry }) => {\r\n  const [amount, setAmount] = useState('100000');\r\n  const [startYear, setStartYear] = useState(2000);\r\n  const [endYear, setEndYear] = useState(2025);\r\n  const [result, setResult] = useState(null);\r\n\r\n  const availableYears = countryData.data.map(item => item.year).sort();\r\n  const minYear = Math.min(...availableYears);\r\n  const maxYear = Math.max(...availableYears);\r\n\r\n  const calculateInflation = () => {\r\n    if (!amount || startYear >= endYear) return;\r\n\r\n    const startAmount = parseFloat(amount);\r\n    let currentValue = startAmount;\r\n    const yearlyValues = [{ year: startYear, value: startAmount }];\r\n\r\n    // Calculate compound inflation from start year to end year\r\n    for (let year = startYear + 1; year <= endYear; year++) {\r\n      const yearData = countryData.data.find(item => item.year === year);\r\n      if (yearData) {\r\n        const inflationRate = yearData.rate / 100;\r\n        currentValue = currentValue * (1 + inflationRate);\r\n        yearlyValues.push({ year, value: currentValue });\r\n      }\r\n    }\r\n\r\n    const totalInflation = ((currentValue - startAmount) / startAmount) * 100;\r\n    const averageInflation = totalInflation / (endYear - startYear);\r\n\r\n    // Get CPI data for display\r\n    const startCPI = 100; // Base CPI\r\n    const endCPI = startCPI * (currentValue / startAmount);\r\n\r\n    setResult({\r\n      originalAmount: startAmount,\r\n      inflatedAmount: currentValue,\r\n      totalInflation: totalInflation,\r\n      averageInflation: averageInflation,\r\n      yearRange: endYear - startYear,\r\n      startCPI: startCPI,\r\n      endCPI: endCPI,\r\n      yearlyValues: yearlyValues\r\n    });\r\n  };\r\n\r\n  const formatCurrency = (value) => {\r\n    return new Intl.NumberFormat('id-ID', {\r\n      style: 'currency',\r\n      currency: countryData.currency,\r\n      minimumFractionDigits: 0,\r\n      maximumFractionDigits: 0\r\n    }).format(value);\r\n  };\r\n\r\n  const formatNumber = (value) => {\r\n    return new Intl.NumberFormat('id-ID', {\r\n      minimumFractionDigits: 2,\r\n      maximumFractionDigits: 2\r\n    }).format(value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white min-h-screen\">\r\n      {/* Header */}\r\n      <div className=\"bg-primary text-white py-8\">\r\n        <div className=\"max-w-4xl mx-auto px-6\">\r\n          <h1 className=\"text-3xl font-bold mb-2\">Inflation Calculator</h1>\r\n          <p className=\"text-blue-100\">\r\n            This tool displays the time value of money based on historical inflation and CPI data.\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-4xl mx-auto px-6 py-8\">\r\n        {/* Country and Period Selection */}\r\n        <div className=\"bg-gray-50 rounded-lg p-6 mb-8\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 items-end\">\r\n            {/* Country Selection */}\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Country\r\n              </label>\r\n              <div className=\"relative\">\r\n                <select\r\n                  value={selectedCountry}\r\n                  className=\"w-full bg-white border border-gray-300 rounded-lg px-4 py-3 text-gray-700 focus:border-primary focus:outline-none appearance-none cursor-pointer\"\r\n                >\r\n                  <option value={selectedCountry}>\r\n                    {countryData.flag} {selectedCountry}\r\n                  </option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Amount Input */}\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Amount\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                value={amount}\r\n                onChange={(e) => setAmount(e.target.value.replace(/[^0-9]/g, ''))}\r\n                className=\"w-full bg-white border border-gray-300 rounded-lg px-4 py-3 text-gray-700 focus:border-primary focus:outline-none\"\r\n                placeholder=\"100000\"\r\n              />\r\n            </div>\r\n\r\n            {/* Start Year */}\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Start year\r\n              </label>\r\n              <select\r\n                value={startYear}\r\n                onChange={(e) => setStartYear(parseInt(e.target.value))}\r\n                className=\"w-full bg-white border border-gray-300 rounded-lg px-4 py-3 text-gray-700 focus:border-primary focus:outline-none appearance-none cursor-pointer\"\r\n              >\r\n                {availableYears.filter(year => year < maxYear).map(year => (\r\n                  <option key={year} value={year}>\r\n                    {year}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            {/* End Year */}\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                End year\r\n              </label>\r\n              <select\r\n                value={endYear}\r\n                onChange={(e) => setEndYear(parseInt(e.target.value))}\r\n                className=\"w-full bg-white border border-gray-300 rounded-lg px-4 py-3 text-gray-700 focus:border-primary focus:outline-none appearance-none cursor-pointer\"\r\n              >\r\n                {availableYears.filter(year => year > startYear).map(year => (\r\n                  <option key={year} value={year}>\r\n                    {year}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"mt-4\">\r\n            <button\r\n              onClick={calculateInflation}\r\n              disabled={!amount || startYear >= endYear}\r\n              className=\"bg-success hover:bg-green-600 text-white px-8 py-3 rounded-lg font-medium disabled:opacity-50 disabled:cursor-not-allowed flex items-center space-x-2\"\r\n            >\r\n              <span>Calculate</span>\r\n              <ArrowRight className=\"w-4 h-4\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Results */}\r\n        {result && (\r\n          <motion.div\r\n            initial={{ opacity: 0, y: 20 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            transition={{ duration: 0.5 }}\r\n          >\r\n            {/* Main Result */}\r\n            <div className=\"mb-8\">\r\n              <h2 className=\"text-2xl font-bold text-gray-900 mb-4\">\r\n                Value of {startYear} {selectedCountry} {countryData.currencySymbol.replace(/[^A-Za-z]/g, '')} today\r\n              </h2>\r\n              \r\n              <div className=\"flex items-center justify-center space-x-8 mb-6\">\r\n                <div className=\"text-center\">\r\n                  <div className=\"text-3xl font-bold text-primary mb-2\">\r\n                    {formatCurrency(result.originalAmount)}\r\n                  </div>\r\n                  <div className=\"text-gray-500\">in {startYear}</div>\r\n                </div>\r\n                \r\n                <ArrowRight className=\"w-8 h-8 text-gray-400\" />\r\n                \r\n                <div className=\"text-center\">\r\n                  <div className=\"text-3xl font-bold text-primary mb-2\">\r\n                    {formatCurrency(result.inflatedAmount)}\r\n                  </div>\r\n                  <div className=\"text-gray-500\">in {endYear}</div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"bg-gray-50 rounded-lg p-6\">\r\n                <p className=\"text-gray-700 leading-relaxed\">\r\n                  The inflation rate in {selectedCountry} between {startYear} and today has been{' '}\r\n                  <strong>{result.totalInflation.toFixed(2)}%</strong>, which translates into a total increase of{' '}\r\n                  <strong>{formatCurrency(result.inflatedAmount - result.originalAmount)}</strong>. This means that{' '}\r\n                  <strong>{formatCurrency(result.originalAmount)} in {startYear} are equivalent to {formatCurrency(result.inflatedAmount)} in {endYear}</strong>.\r\n                  In other words, the purchasing power of {formatCurrency(result.originalAmount)} in {startYear} equals{' '}\r\n                  {formatCurrency(result.inflatedAmount)} today. The average annual inflation rate between these periods has been{' '}\r\n                  <strong>{result.averageInflation.toFixed(2)}%</strong>.\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Statistics and Chart */}\r\n            <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\r\n              {/* Chart */}\r\n              <div className=\"lg:col-span-2\">\r\n                <h3 className=\"text-xl font-bold text-gray-900 mb-4\">\r\n                  Inflation timeline in {selectedCountry} ({startYear} - {endYear})\r\n                </h3>\r\n                <p className=\"text-gray-600 text-sm mb-4\">\r\n                  The following chart depicts the equivalence of {formatCurrency(result.originalAmount)} due to compound inflation and CPI changes. All values are equivalent in terms of purchasing power, which means that for each year the same goods or services could be bought with the indicated amount of money.\r\n                </p>\r\n                \r\n                <div className=\"h-80 bg-gray-50 rounded-lg p-4\">\r\n                  <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                    <AreaChart data={result.yearlyValues}>\r\n                      <defs>\r\n                        <linearGradient id=\"colorValue\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                          <stop offset=\"5%\" stopColor=\"#3B82F6\" stopOpacity={0.3}/>\r\n                          <stop offset=\"95%\" stopColor=\"#3B82F6\" stopOpacity={0.1}/>\r\n                        </linearGradient>\r\n                      </defs>\r\n                      <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#E5E7EB\" />\r\n                      <XAxis \r\n                        dataKey=\"year\" \r\n                        stroke=\"#6B7280\"\r\n                        fontSize={12}\r\n                      />\r\n                      <YAxis \r\n                        stroke=\"#6B7280\"\r\n                        fontSize={12}\r\n                        tickFormatter={(value) => formatCurrency(value).replace(/\\D/g, '') + 'k'}\r\n                      />\r\n                      <Area \r\n                        type=\"monotone\" \r\n                        dataKey=\"value\" \r\n                        stroke=\"#3B82F6\" \r\n                        strokeWidth={2}\r\n                        fillOpacity={1}\r\n                        fill=\"url(#colorValue)\"\r\n                      />\r\n                    </AreaChart>\r\n                  </ResponsiveContainer>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Statistics */}\r\n              <div>\r\n                <h3 className=\"text-xl font-bold text-gray-900 mb-4\">\r\n                  Value of {countryData.currencySymbol.replace(/[^A-Za-z]/g, '')} over time (by year)\r\n                </h3>\r\n                \r\n                <div className=\"space-y-4\">\r\n                  <div className=\"bg-gray-50 rounded-lg p-4\">\r\n                    <div className=\"text-sm text-gray-600 mb-1\">Cumulative inflation</div>\r\n                    <div className=\"text-2xl font-bold text-gray-900\">{result.totalInflation.toFixed(2)}%</div>\r\n                    <div className=\"text-xs text-gray-500\">From {startYear}</div>\r\n                  </div>\r\n                  \r\n                  <div className=\"bg-gray-50 rounded-lg p-4\">\r\n                    <div className=\"text-sm text-gray-600 mb-1\">Avg. annual inflation</div>\r\n                    <div className=\"text-2xl font-bold text-gray-900\">{result.averageInflation.toFixed(2)}%</div>\r\n                    <div className=\"text-xs text-gray-500\">From {startYear}</div>\r\n                  </div>\r\n                  \r\n                  <div className=\"bg-gray-50 rounded-lg p-4\">\r\n                    <div className=\"text-sm text-gray-600 mb-1\">CPI {startYear}</div>\r\n                    <div className=\"text-2xl font-bold text-gray-900\">{formatNumber(result.startCPI)}</div>\r\n                  </div>\r\n                  \r\n                  <div className=\"bg-gray-50 rounded-lg p-4\">\r\n                    <div className=\"text-sm text-gray-600 mb-1\">CPI today</div>\r\n                    <div className=\"text-2xl font-bold text-gray-900\">{formatNumber(result.endCPI)}</div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Yearly breakdown table */}\r\n                <div className=\"mt-6\">\r\n                  <div className=\"bg-gray-50 rounded-lg p-4 max-h-64 overflow-y-auto\">\r\n                    <div className=\"grid grid-cols-2 gap-2 text-sm\">\r\n                      <div className=\"font-semibold text-gray-700\">Period</div>\r\n                      <div className=\"font-semibold text-gray-700\">Value</div>\r\n                      {result.yearlyValues.slice(0, 10).map((item, index) => (\r\n                        <React.Fragment key={item.year}>\r\n                          <div className=\"text-gray-600\">{item.year}</div>\r\n                          <div className=\"text-gray-900 font-medium\">\r\n                            {formatCurrency(item.value).replace(/\\D/g, '')}.{formatCurrency(item.value).slice(-3)}\r\n                          </div>\r\n                        </React.Fragment>\r\n                      ))}\r\n                      {result.yearlyValues.length > 10 && (\r\n                        <>\r\n                          <div className=\"text-gray-400\">...</div>\r\n                          <div className=\"text-gray-400\">...</div>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </motion.div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SimpleInflationCalculator;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,eAAe;AACtC,SAASC,UAAU,EAAEC,UAAU,EAAEC,UAAU,QAAQ,cAAc;AACjE,SAASC,SAAS,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAEC,aAAa,EAAEC,mBAAmB,EAAEC,IAAI,EAAEC,SAAS,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE9G,MAAMC,yBAAyB,GAAGA,CAAC;EAAEC,WAAW;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EACtE,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGtB,QAAQ,CAAC,QAAQ,CAAC;EAC9C,MAAM,CAACuB,SAAS,EAAEC,YAAY,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACyB,OAAO,EAAEC,UAAU,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAAC2B,MAAM,EAAEC,SAAS,CAAC,GAAG5B,QAAQ,CAAC,IAAI,CAAC;EAE1C,MAAM6B,cAAc,GAAGX,WAAW,CAACY,IAAI,CAACC,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC,CAACC,IAAI,CAAC,CAAC;EACrE,MAAMC,OAAO,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAGR,cAAc,CAAC;EAC3C,MAAMS,OAAO,GAAGF,IAAI,CAACG,GAAG,CAAC,GAAGV,cAAc,CAAC;EAE3C,MAAMW,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,IAAI,CAACnB,MAAM,IAAIE,SAAS,IAAIE,OAAO,EAAE;IAErC,MAAMgB,WAAW,GAAGC,UAAU,CAACrB,MAAM,CAAC;IACtC,IAAIsB,YAAY,GAAGF,WAAW;IAC9B,MAAMG,YAAY,GAAG,CAAC;MAAEX,IAAI,EAAEV,SAAS;MAAEsB,KAAK,EAAEJ;IAAY,CAAC,CAAC;;IAE9D;IACA,KAAK,IAAIR,IAAI,GAAGV,SAAS,GAAG,CAAC,EAAEU,IAAI,IAAIR,OAAO,EAAEQ,IAAI,EAAE,EAAE;MACtD,MAAMa,QAAQ,GAAG5B,WAAW,CAACY,IAAI,CAACiB,IAAI,CAACf,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAKA,IAAI,CAAC;MAClE,IAAIa,QAAQ,EAAE;QACZ,MAAME,aAAa,GAAGF,QAAQ,CAACG,IAAI,GAAG,GAAG;QACzCN,YAAY,GAAGA,YAAY,IAAI,CAAC,GAAGK,aAAa,CAAC;QACjDJ,YAAY,CAACM,IAAI,CAAC;UAAEjB,IAAI;UAAEY,KAAK,EAAEF;QAAa,CAAC,CAAC;MAClD;IACF;IAEA,MAAMQ,cAAc,GAAI,CAACR,YAAY,GAAGF,WAAW,IAAIA,WAAW,GAAI,GAAG;IACzE,MAAMW,gBAAgB,GAAGD,cAAc,IAAI1B,OAAO,GAAGF,SAAS,CAAC;;IAE/D;IACA,MAAM8B,QAAQ,GAAG,GAAG,CAAC,CAAC;IACtB,MAAMC,MAAM,GAAGD,QAAQ,IAAIV,YAAY,GAAGF,WAAW,CAAC;IAEtDb,SAAS,CAAC;MACR2B,cAAc,EAAEd,WAAW;MAC3Be,cAAc,EAAEb,YAAY;MAC5BQ,cAAc,EAAEA,cAAc;MAC9BC,gBAAgB,EAAEA,gBAAgB;MAClCK,SAAS,EAAEhC,OAAO,GAAGF,SAAS;MAC9B8B,QAAQ,EAAEA,QAAQ;MAClBC,MAAM,EAAEA,MAAM;MACdV,YAAY,EAAEA;IAChB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMc,cAAc,GAAIb,KAAK,IAAK;IAChC,OAAO,IAAIc,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;MACpCC,KAAK,EAAE,UAAU;MACjBC,QAAQ,EAAE5C,WAAW,CAAC4C,QAAQ;MAC9BC,qBAAqB,EAAE,CAAC;MACxBC,qBAAqB,EAAE;IACzB,CAAC,CAAC,CAACC,MAAM,CAACpB,KAAK,CAAC;EAClB,CAAC;EAED,MAAMqB,YAAY,GAAIrB,KAAK,IAAK;IAC9B,OAAO,IAAIc,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;MACpCG,qBAAqB,EAAE,CAAC;MACxBC,qBAAqB,EAAE;IACzB,CAAC,CAAC,CAACC,MAAM,CAACpB,KAAK,CAAC;EAClB,CAAC;EAED,oBACE/B,OAAA;IAAKqD,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBAEpCtD,OAAA;MAAKqD,SAAS,EAAC,4BAA4B;MAAAC,QAAA,eACzCtD,OAAA;QAAKqD,SAAS,EAAC,wBAAwB;QAAAC,QAAA,gBACrCtD,OAAA;UAAIqD,SAAS,EAAC,yBAAyB;UAAAC,QAAA,EAAC;QAAoB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjE1D,OAAA;UAAGqD,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAC;QAE7B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEN1D,OAAA;MAAKqD,SAAS,EAAC,6BAA6B;MAAAC,QAAA,gBAE1CtD,OAAA;QAAKqD,SAAS,EAAC,gCAAgC;QAAAC,QAAA,gBAC7CtD,OAAA;UAAKqD,SAAS,EAAC,iDAAiD;UAAAC,QAAA,gBAE9DtD,OAAA;YAAAsD,QAAA,gBACEtD,OAAA;cAAOqD,SAAS,EAAC,8CAA8C;cAAAC,QAAA,EAAC;YAEhE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACR1D,OAAA;cAAKqD,SAAS,EAAC,UAAU;cAAAC,QAAA,eACvBtD,OAAA;gBACE+B,KAAK,EAAE1B,eAAgB;gBACvBgD,SAAS,EAAC,kJAAkJ;gBAAAC,QAAA,eAE5JtD,OAAA;kBAAQ+B,KAAK,EAAE1B,eAAgB;kBAAAiD,QAAA,GAC5BlD,WAAW,CAACuD,IAAI,EAAC,GAAC,EAACtD,eAAe;gBAAA;kBAAAkD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC7B;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAGN1D,OAAA;YAAAsD,QAAA,gBACEtD,OAAA;cAAOqD,SAAS,EAAC,8CAA8C;cAAAC,QAAA,EAAC;YAEhE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACR1D,OAAA;cACE4D,IAAI,EAAC,MAAM;cACX7B,KAAK,EAAExB,MAAO;cACdsD,QAAQ,EAAGC,CAAC,IAAKtD,SAAS,CAACsD,CAAC,CAACC,MAAM,CAAChC,KAAK,CAACiC,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CAAE;cAClEX,SAAS,EAAC,mHAAmH;cAC7HY,WAAW,EAAC;YAAQ;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrB,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eAGN1D,OAAA;YAAAsD,QAAA,gBACEtD,OAAA;cAAOqD,SAAS,EAAC,8CAA8C;cAAAC,QAAA,EAAC;YAEhE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACR1D,OAAA;cACE+B,KAAK,EAAEtB,SAAU;cACjBoD,QAAQ,EAAGC,CAAC,IAAKpD,YAAY,CAACwD,QAAQ,CAACJ,CAAC,CAACC,MAAM,CAAChC,KAAK,CAAC,CAAE;cACxDsB,SAAS,EAAC,kJAAkJ;cAAAC,QAAA,EAE3JvC,cAAc,CAACoD,MAAM,CAAChD,IAAI,IAAIA,IAAI,GAAGK,OAAO,CAAC,CAACP,GAAG,CAACE,IAAI,iBACrDnB,OAAA;gBAAmB+B,KAAK,EAAEZ,IAAK;gBAAAmC,QAAA,EAC5BnC;cAAI,GADMA,IAAI;gBAAAoC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAET,CACT;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,eAGN1D,OAAA;YAAAsD,QAAA,gBACEtD,OAAA;cAAOqD,SAAS,EAAC,8CAA8C;cAAAC,QAAA,EAAC;YAEhE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACR1D,OAAA;cACE+B,KAAK,EAAEpB,OAAQ;cACfkD,QAAQ,EAAGC,CAAC,IAAKlD,UAAU,CAACsD,QAAQ,CAACJ,CAAC,CAACC,MAAM,CAAChC,KAAK,CAAC,CAAE;cACtDsB,SAAS,EAAC,kJAAkJ;cAAAC,QAAA,EAE3JvC,cAAc,CAACoD,MAAM,CAAChD,IAAI,IAAIA,IAAI,GAAGV,SAAS,CAAC,CAACQ,GAAG,CAACE,IAAI,iBACvDnB,OAAA;gBAAmB+B,KAAK,EAAEZ,IAAK;gBAAAmC,QAAA,EAC5BnC;cAAI,GADMA,IAAI;gBAAAoC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAET,CACT;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAEN1D,OAAA;UAAKqD,SAAS,EAAC,MAAM;UAAAC,QAAA,eACnBtD,OAAA;YACEoE,OAAO,EAAE1C,kBAAmB;YAC5B2C,QAAQ,EAAE,CAAC9D,MAAM,IAAIE,SAAS,IAAIE,OAAQ;YAC1C0C,SAAS,EAAC,uJAAuJ;YAAAC,QAAA,gBAEjKtD,OAAA;cAAAsD,QAAA,EAAM;YAAS;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACtB1D,OAAA,CAACX,UAAU;cAACgE,SAAS,EAAC;YAAS;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5B;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,EAGL7C,MAAM,iBACLb,OAAA,CAACb,MAAM,CAACmF,GAAG;QACTC,OAAO,EAAE;UAAEC,OAAO,EAAE,CAAC;UAAEC,CAAC,EAAE;QAAG,CAAE;QAC/BC,OAAO,EAAE;UAAEF,OAAO,EAAE,CAAC;UAAEC,CAAC,EAAE;QAAE,CAAE;QAC9BE,UAAU,EAAE;UAAEC,QAAQ,EAAE;QAAI,CAAE;QAAAtB,QAAA,gBAG9BtD,OAAA;UAAKqD,SAAS,EAAC,MAAM;UAAAC,QAAA,gBACnBtD,OAAA;YAAIqD,SAAS,EAAC,uCAAuC;YAAAC,QAAA,GAAC,WAC3C,EAAC7C,SAAS,EAAC,GAAC,EAACJ,eAAe,EAAC,GAAC,EAACD,WAAW,CAACyE,cAAc,CAACb,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC,EAAC,QAC/F;UAAA;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAEL1D,OAAA;YAAKqD,SAAS,EAAC,iDAAiD;YAAAC,QAAA,gBAC9DtD,OAAA;cAAKqD,SAAS,EAAC,aAAa;cAAAC,QAAA,gBAC1BtD,OAAA;gBAAKqD,SAAS,EAAC,sCAAsC;gBAAAC,QAAA,EAClDV,cAAc,CAAC/B,MAAM,CAAC4B,cAAc;cAAC;gBAAAc,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACnC,CAAC,eACN1D,OAAA;gBAAKqD,SAAS,EAAC,eAAe;gBAAAC,QAAA,GAAC,KAAG,EAAC7C,SAAS;cAAA;gBAAA8C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChD,CAAC,eAEN1D,OAAA,CAACX,UAAU;cAACgE,SAAS,EAAC;YAAuB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAEhD1D,OAAA;cAAKqD,SAAS,EAAC,aAAa;cAAAC,QAAA,gBAC1BtD,OAAA;gBAAKqD,SAAS,EAAC,sCAAsC;gBAAAC,QAAA,EAClDV,cAAc,CAAC/B,MAAM,CAAC6B,cAAc;cAAC;gBAAAa,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACnC,CAAC,eACN1D,OAAA;gBAAKqD,SAAS,EAAC,eAAe;gBAAAC,QAAA,GAAC,KAAG,EAAC3C,OAAO;cAAA;gBAAA4C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9C,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAEN1D,OAAA;YAAKqD,SAAS,EAAC,2BAA2B;YAAAC,QAAA,eACxCtD,OAAA;cAAGqD,SAAS,EAAC,+BAA+B;cAAAC,QAAA,GAAC,wBACrB,EAACjD,eAAe,EAAC,WAAS,EAACI,SAAS,EAAC,qBAAmB,EAAC,GAAG,eAClFT,OAAA;gBAAAsD,QAAA,GAASzC,MAAM,CAACwB,cAAc,CAACyC,OAAO,CAAC,CAAC,CAAC,EAAC,GAAC;cAAA;gBAAAvB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,+CAA2C,EAAC,GAAG,eACnG1D,OAAA;gBAAAsD,QAAA,EAASV,cAAc,CAAC/B,MAAM,CAAC6B,cAAc,GAAG7B,MAAM,CAAC4B,cAAc;cAAC;gBAAAc,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAS,CAAC,qBAAiB,EAAC,GAAG,eACrG1D,OAAA;gBAAAsD,QAAA,GAASV,cAAc,CAAC/B,MAAM,CAAC4B,cAAc,CAAC,EAAC,MAAI,EAAChC,SAAS,EAAC,qBAAmB,EAACmC,cAAc,CAAC/B,MAAM,CAAC6B,cAAc,CAAC,EAAC,MAAI,EAAC/B,OAAO;cAAA;gBAAA4C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAS,CAAC,8CACtG,EAACd,cAAc,CAAC/B,MAAM,CAAC4B,cAAc,CAAC,EAAC,MAAI,EAAChC,SAAS,EAAC,SAAO,EAAC,GAAG,EACxGmC,cAAc,CAAC/B,MAAM,CAAC6B,cAAc,CAAC,EAAC,0EAAwE,EAAC,GAAG,eACnH1C,OAAA;gBAAAsD,QAAA,GAASzC,MAAM,CAACyB,gBAAgB,CAACwC,OAAO,CAAC,CAAC,CAAC,EAAC,GAAC;cAAA;gBAAAvB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KACxD;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAGN1D,OAAA;UAAKqD,SAAS,EAAC,uCAAuC;UAAAC,QAAA,gBAEpDtD,OAAA;YAAKqD,SAAS,EAAC,eAAe;YAAAC,QAAA,gBAC5BtD,OAAA;cAAIqD,SAAS,EAAC,sCAAsC;cAAAC,QAAA,GAAC,wBAC7B,EAACjD,eAAe,EAAC,IAAE,EAACI,SAAS,EAAC,KAAG,EAACE,OAAO,EAAC,GAClE;YAAA;cAAA4C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACL1D,OAAA;cAAGqD,SAAS,EAAC,4BAA4B;cAAAC,QAAA,GAAC,iDACO,EAACV,cAAc,CAAC/B,MAAM,CAAC4B,cAAc,CAAC,EAAC,mNACxF;YAAA;cAAAc,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eAEJ1D,OAAA;cAAKqD,SAAS,EAAC,gCAAgC;cAAAC,QAAA,eAC7CtD,OAAA,CAACJ,mBAAmB;gBAACmF,KAAK,EAAC,MAAM;gBAACC,MAAM,EAAC,MAAM;gBAAA1B,QAAA,eAC7CtD,OAAA,CAACF,SAAS;kBAACkB,IAAI,EAAEH,MAAM,CAACiB,YAAa;kBAAAwB,QAAA,gBACnCtD,OAAA;oBAAAsD,QAAA,eACEtD,OAAA;sBAAgBiF,EAAE,EAAC,YAAY;sBAACC,EAAE,EAAC,GAAG;sBAACC,EAAE,EAAC,GAAG;sBAACC,EAAE,EAAC,GAAG;sBAACC,EAAE,EAAC,GAAG;sBAAA/B,QAAA,gBACzDtD,OAAA;wBAAMsF,MAAM,EAAC,IAAI;wBAACC,SAAS,EAAC,SAAS;wBAACC,WAAW,EAAE;sBAAI;wBAAAjC,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAC,CAAC,eACzD1D,OAAA;wBAAMsF,MAAM,EAAC,KAAK;wBAACC,SAAS,EAAC,SAAS;wBAACC,WAAW,EAAE;sBAAI;wBAAAjC,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAC,CAAC;oBAAA;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAC5C;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACb,CAAC,eACP1D,OAAA,CAACL,aAAa;oBAAC8F,eAAe,EAAC,KAAK;oBAACC,MAAM,EAAC;kBAAS;oBAAAnC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,eACxD1D,OAAA,CAACP,KAAK;oBACJkG,OAAO,EAAC,MAAM;oBACdD,MAAM,EAAC,SAAS;oBAChBE,QAAQ,EAAE;kBAAG;oBAAArC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACd,CAAC,eACF1D,OAAA,CAACN,KAAK;oBACJgG,MAAM,EAAC,SAAS;oBAChBE,QAAQ,EAAE,EAAG;oBACbC,aAAa,EAAG9D,KAAK,IAAKa,cAAc,CAACb,KAAK,CAAC,CAACiC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,GAAG;kBAAI;oBAAAT,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC1E,CAAC,eACF1D,OAAA,CAACH,IAAI;oBACH+D,IAAI,EAAC,UAAU;oBACf+B,OAAO,EAAC,OAAO;oBACfD,MAAM,EAAC,SAAS;oBAChBI,WAAW,EAAE,CAAE;oBACfC,WAAW,EAAE,CAAE;oBACfC,IAAI,EAAC;kBAAkB;oBAAAzC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACxB,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACO;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACO;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnB,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAGN1D,OAAA;YAAAsD,QAAA,gBACEtD,OAAA;cAAIqD,SAAS,EAAC,sCAAsC;cAAAC,QAAA,GAAC,WAC1C,EAAClD,WAAW,CAACyE,cAAc,CAACb,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC,EAAC,sBACjE;YAAA;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAEL1D,OAAA;cAAKqD,SAAS,EAAC,WAAW;cAAAC,QAAA,gBACxBtD,OAAA;gBAAKqD,SAAS,EAAC,2BAA2B;gBAAAC,QAAA,gBACxCtD,OAAA;kBAAKqD,SAAS,EAAC,4BAA4B;kBAAAC,QAAA,EAAC;gBAAoB;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACtE1D,OAAA;kBAAKqD,SAAS,EAAC,kCAAkC;kBAAAC,QAAA,GAAEzC,MAAM,CAACwB,cAAc,CAACyC,OAAO,CAAC,CAAC,CAAC,EAAC,GAAC;gBAAA;kBAAAvB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eAC3F1D,OAAA;kBAAKqD,SAAS,EAAC,uBAAuB;kBAAAC,QAAA,GAAC,OAAK,EAAC7C,SAAS;gBAAA;kBAAA8C,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC1D,CAAC,eAEN1D,OAAA;gBAAKqD,SAAS,EAAC,2BAA2B;gBAAAC,QAAA,gBACxCtD,OAAA;kBAAKqD,SAAS,EAAC,4BAA4B;kBAAAC,QAAA,EAAC;gBAAqB;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACvE1D,OAAA;kBAAKqD,SAAS,EAAC,kCAAkC;kBAAAC,QAAA,GAAEzC,MAAM,CAACyB,gBAAgB,CAACwC,OAAO,CAAC,CAAC,CAAC,EAAC,GAAC;gBAAA;kBAAAvB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eAC7F1D,OAAA;kBAAKqD,SAAS,EAAC,uBAAuB;kBAAAC,QAAA,GAAC,OAAK,EAAC7C,SAAS;gBAAA;kBAAA8C,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC1D,CAAC,eAEN1D,OAAA;gBAAKqD,SAAS,EAAC,2BAA2B;gBAAAC,QAAA,gBACxCtD,OAAA;kBAAKqD,SAAS,EAAC,4BAA4B;kBAAAC,QAAA,GAAC,MAAI,EAAC7C,SAAS;gBAAA;kBAAA8C,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eACjE1D,OAAA;kBAAKqD,SAAS,EAAC,kCAAkC;kBAAAC,QAAA,EAAEF,YAAY,CAACvC,MAAM,CAAC0B,QAAQ;gBAAC;kBAAAgB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACpF,CAAC,eAEN1D,OAAA;gBAAKqD,SAAS,EAAC,2BAA2B;gBAAAC,QAAA,gBACxCtD,OAAA;kBAAKqD,SAAS,EAAC,4BAA4B;kBAAAC,QAAA,EAAC;gBAAS;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eAC3D1D,OAAA;kBAAKqD,SAAS,EAAC,kCAAkC;kBAAAC,QAAA,EAAEF,YAAY,CAACvC,MAAM,CAAC2B,MAAM;gBAAC;kBAAAe,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAClF,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eAGN1D,OAAA;cAAKqD,SAAS,EAAC,MAAM;cAAAC,QAAA,eACnBtD,OAAA;gBAAKqD,SAAS,EAAC,oDAAoD;gBAAAC,QAAA,eACjEtD,OAAA;kBAAKqD,SAAS,EAAC,gCAAgC;kBAAAC,QAAA,gBAC7CtD,OAAA;oBAAKqD,SAAS,EAAC,6BAA6B;oBAAAC,QAAA,EAAC;kBAAM;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eACzD1D,OAAA;oBAAKqD,SAAS,EAAC,6BAA6B;oBAAAC,QAAA,EAAC;kBAAK;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,EACvD7C,MAAM,CAACiB,YAAY,CAACmE,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAChF,GAAG,CAAC,CAACC,IAAI,EAAEgF,KAAK,kBAChDlG,OAAA,CAACf,KAAK,CAACgB,QAAQ;oBAAAqD,QAAA,gBACbtD,OAAA;sBAAKqD,SAAS,EAAC,eAAe;sBAAAC,QAAA,EAAEpC,IAAI,CAACC;oBAAI;sBAAAoC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAM,CAAC,eAChD1D,OAAA;sBAAKqD,SAAS,EAAC,2BAA2B;sBAAAC,QAAA,GACvCV,cAAc,CAAC1B,IAAI,CAACa,KAAK,CAAC,CAACiC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,EAAC,GAAC,EAACpB,cAAc,CAAC1B,IAAI,CAACa,KAAK,CAAC,CAACkE,KAAK,CAAC,CAAC,CAAC,CAAC;oBAAA;sBAAA1C,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAClF,CAAC;kBAAA,GAJaxC,IAAI,CAACC,IAAI;oBAAAoC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAKd,CACjB,CAAC,EACD7C,MAAM,CAACiB,YAAY,CAACqE,MAAM,GAAG,EAAE,iBAC9BnG,OAAA,CAAAE,SAAA;oBAAAoD,QAAA,gBACEtD,OAAA;sBAAKqD,SAAS,EAAC,eAAe;sBAAAC,QAAA,EAAC;oBAAG;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC,eACxC1D,OAAA;sBAAKqD,SAAS,EAAC,eAAe;sBAAAC,QAAA,EAAC;oBAAG;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC;kBAAA,eACxC,CACH;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CACb;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACpD,EAAA,CAlTIH,yBAAyB;AAAAiG,EAAA,GAAzBjG,yBAAyB;AAoT/B,eAAeA,yBAAyB;AAAC,IAAAiG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}