{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\Code\\\\Inflate\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { motion } from 'framer-motion';\nimport Header from './components/Header';\nimport CountrySelector from './components/CountrySelector';\nimport InflationChart from './components/InflationChart';\nimport InflationCalculator from './components/InflationCalculator';\nimport HedgeRecommendations from './components/HedgeRecommendations';\nimport { inflationData, countries } from './data/inflationData';\nimport { hedgeAssets } from './data/hedgeAssets';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  var _convertedData;\n  const [selectedCountry, setSelectedCountry] = useState('Indonesia');\n  const [chartType, setChartType] = useState('line');\n  const currentCountryData = inflationData[selectedCountry];\n\n  // Use all available data for the chart\n  const convertedData = currentCountryData.data;\n  const currentInflationRate = ((_convertedData = convertedData[convertedData.length - 1]) === null || _convertedData === void 0 ? void 0 : _convertedData.rate) || 0;\n  const handleCountryChange = country => {\n    setSelectedCountry(country);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-dark-200\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"max-w-7xl mx-auto px-6 py-8\",\n      children: [/*#__PURE__*/_jsxDEV(motion.div, {\n        className: \"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\",\n        initial: {\n          y: 20,\n          opacity: 0\n        },\n        animate: {\n          y: 0,\n          opacity: 1\n        },\n        transition: {\n          duration: 0.5\n        },\n        children: [/*#__PURE__*/_jsxDEV(CountrySelector, {\n          countries: countries,\n          selectedCountry: selectedCountry,\n          onCountryChange: handleCountryChange,\n          countryData: inflationData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-8\",\n        children: /*#__PURE__*/_jsxDEV(InflationChart, {\n          data: convertedData,\n          selectedYear: 2025,\n          chartType: chartType,\n          onChartTypeChange: setChartType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InflationCalculator, {\n        countryData: currentCountryData,\n        selectedCountry: selectedCountry\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HedgeRecommendations, {\n        hedgeAssets: hedgeAssets,\n        inflationRate: currentInflationRate.toFixed(2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"6IMGrGV/2jnWvzjahNkud2GrpnE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","motion","Header","CountrySelector","InflationChart","InflationCalculator","HedgeRecommendations","inflationData","countries","hedgeAssets","jsxDEV","_jsxDEV","App","_s","_convertedData","selectedCountry","setSelectedCountry","chartType","setChartType","currentCountryData","convertedData","data","currentInflationRate","length","rate","handleCountryChange","country","className","children","fileName","_jsxFileName","lineNumber","columnNumber","div","initial","y","opacity","animate","transition","duration","onCountryChange","countryData","selectedYear","onChartTypeChange","inflationRate","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/USER/Documents/Code/Inflate/src/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport Header from './components/Header';\r\nimport CountrySelector from './components/CountrySelector';\r\nimport InflationChart from './components/InflationChart';\r\nimport InflationCalculator from './components/InflationCalculator';\r\nimport HedgeRecommendations from './components/HedgeRecommendations';\r\nimport { inflationData, countries } from './data/inflationData';\r\nimport { hedgeAssets } from './data/hedgeAssets';\r\n\r\nfunction App() {\r\n  const [selectedCountry, setSelectedCountry] = useState('Indonesia');\r\n  const [chartType, setChartType] = useState('line');\r\n\r\n  const currentCountryData = inflationData[selectedCountry];\r\n\r\n  // Use all available data for the chart\r\n  const convertedData = currentCountryData.data;\r\n\r\n  const currentInflationRate = convertedData[convertedData.length - 1]?.rate || 0;\r\n\r\n  const handleCountryChange = (country) => {\r\n    setSelectedCountry(country);\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-dark-200\">\r\n      <Header />\r\n      \r\n      <main className=\"max-w-7xl mx-auto px-6 py-8\">\r\n        {/* Controls Section */}\r\n        <motion.div \r\n          className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\"\r\n          initial={{ y: 20, opacity: 0 }}\r\n          animate={{ y: 0, opacity: 1 }}\r\n          transition={{ duration: 0.5 }}\r\n        >\r\n          <CountrySelector\r\n            countries={countries}\r\n            selectedCountry={selectedCountry}\r\n            onCountryChange={handleCountryChange}\r\n            countryData={inflationData}\r\n          />\r\n          <div></div>\r\n          <div></div>\r\n        </motion.div>\r\n\r\n        {/* Chart Section */}\r\n        <div className=\"mb-8\">\r\n          <InflationChart\r\n            data={convertedData}\r\n            selectedYear={2025}\r\n            chartType={chartType}\r\n            onChartTypeChange={setChartType}\r\n          />\r\n        </div>\r\n\r\n        {/* Calculator Section */}\r\n        <InflationCalculator\r\n          countryData={currentCountryData}\r\n          selectedCountry={selectedCountry}\r\n        />\r\n\r\n        {/* Recommendations Section */}\r\n        <HedgeRecommendations\r\n          hedgeAssets={hedgeAssets}\r\n          inflationRate={currentInflationRate.toFixed(2)}\r\n        />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}