{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\Code\\\\Inflate\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { motion } from 'framer-motion';\nimport Header from './components/Header';\nimport InflationCalculator from './components/InflationCalculator';\nimport HedgeRecommendations from './components/HedgeRecommendations';\nimport { ThemeProvider, useTheme } from './contexts/ThemeContext';\nimport { inflationData, countries } from './data/inflationData';\nimport { hedgeAssets } from './data/hedgeAssets';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContent = () => {\n  _s();\n  var _convertedData;\n  const {\n    colors\n  } = useTheme();\n  const [selectedCountry, setSelectedCountry] = useState('Indonesia');\n  const [chartType, setChartType] = useState('line');\n  const currentCountryData = inflationData[selectedCountry];\n\n  // Use all available data for the chart\n  const convertedData = currentCountryData.data;\n  const currentInflationRate = ((_convertedData = convertedData[convertedData.length - 1]) === null || _convertedData === void 0 ? void 0 : _convertedData.rate) || 0;\n  const handleCountryChange = country => {\n    setSelectedCountry(country);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen transition-colors duration-200\",\n    style: {\n      backgroundColor: colors.background\n    },\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"max-w-7xl mx-auto px-6 py-8\",\n      children: [/*#__PURE__*/_jsxDEV(InflationCalculator, {\n        countryData: currentCountryData,\n        selectedCountry: selectedCountry,\n        onCountryChange: handleCountryChange,\n        countries: countries,\n        inflationData: inflationData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HedgeRecommendations, {\n        hedgeAssets: hedgeAssets,\n        inflationRate: currentInflationRate.toFixed(2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(AppContent, \"pcFjHuNcoF/ZrWIDpPAk4EXlf50=\", false, function () {\n  return [useTheme];\n});\n_c = AppContent;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    children: /*#__PURE__*/_jsxDEV(AppContent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"AppContent\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","motion","Header","InflationCalculator","HedgeRecommendations","ThemeProvider","useTheme","inflationData","countries","hedgeAssets","jsxDEV","_jsxDEV","AppContent","_s","_convertedData","colors","selectedCountry","setSelectedCountry","chartType","setChartType","currentCountryData","convertedData","data","currentInflationRate","length","rate","handleCountryChange","country","className","style","backgroundColor","background","children","fileName","_jsxFileName","lineNumber","columnNumber","countryData","onCountryChange","inflationRate","toFixed","_c","App","_c2","$RefreshReg$"],"sources":["C:/Users/USER/Documents/Code/Inflate/src/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport Header from './components/Header';\r\nimport InflationCalculator from './components/InflationCalculator';\r\nimport HedgeRecommendations from './components/HedgeRecommendations';\r\nimport { ThemeProvider, useTheme } from './contexts/ThemeContext';\r\nimport { inflationData, countries } from './data/inflationData';\r\nimport { hedgeAssets } from './data/hedgeAssets';\r\n\r\nconst AppContent = () => {\r\n  const { colors } = useTheme();\r\n  const [selectedCountry, setSelectedCountry] = useState('Indonesia');\r\n  const [chartType, setChartType] = useState('line');\r\n\r\n  const currentCountryData = inflationData[selectedCountry];\r\n\r\n  // Use all available data for the chart\r\n  const convertedData = currentCountryData.data;\r\n\r\n  const currentInflationRate = convertedData[convertedData.length - 1]?.rate || 0;\r\n\r\n  const handleCountryChange = (country) => {\r\n    setSelectedCountry(country);\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen transition-colors duration-200\" style={{ backgroundColor: colors.background }}>\r\n      <Header />\r\n      \r\n      <main className=\"max-w-7xl mx-auto px-6 py-8\">\r\n\r\n\r\n        {/* Calculator Section */}\r\n        <InflationCalculator\r\n          countryData={currentCountryData}\r\n          selectedCountry={selectedCountry}\r\n          onCountryChange={handleCountryChange}\r\n          countries={countries}\r\n          inflationData={inflationData}\r\n        />\r\n\r\n        {/* Recommendations Section */}\r\n        <HedgeRecommendations\r\n          hedgeAssets={hedgeAssets}\r\n          inflationRate={currentInflationRate.toFixed(2)}\r\n        />\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <ThemeProvider>\r\n      <AppContent />\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,eAAe;AACtC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,mBAAmB,MAAM,kCAAkC;AAClE,OAAOC,oBAAoB,MAAM,mCAAmC;AACpE,SAASC,aAAa,EAAEC,QAAQ,QAAQ,yBAAyB;AACjE,SAASC,aAAa,EAAEC,SAAS,QAAQ,sBAAsB;AAC/D,SAASC,WAAW,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,cAAA;EACvB,MAAM;IAAEC;EAAO,CAAC,GAAGT,QAAQ,CAAC,CAAC;EAC7B,MAAM,CAACU,eAAe,EAAEC,kBAAkB,CAAC,GAAGjB,QAAQ,CAAC,WAAW,CAAC;EACnE,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,MAAM,CAAC;EAElD,MAAMoB,kBAAkB,GAAGb,aAAa,CAACS,eAAe,CAAC;;EAEzD;EACA,MAAMK,aAAa,GAAGD,kBAAkB,CAACE,IAAI;EAE7C,MAAMC,oBAAoB,GAAG,EAAAT,cAAA,GAAAO,aAAa,CAACA,aAAa,CAACG,MAAM,GAAG,CAAC,CAAC,cAAAV,cAAA,uBAAvCA,cAAA,CAAyCW,IAAI,KAAI,CAAC;EAE/E,MAAMC,mBAAmB,GAAIC,OAAO,IAAK;IACvCV,kBAAkB,CAACU,OAAO,CAAC;EAC7B,CAAC;EAED,oBACEhB,OAAA;IAAKiB,SAAS,EAAC,6CAA6C;IAACC,KAAK,EAAE;MAAEC,eAAe,EAAEf,MAAM,CAACgB;IAAW,CAAE;IAAAC,QAAA,gBACzGrB,OAAA,CAACT,MAAM;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEVzB,OAAA;MAAMiB,SAAS,EAAC,6BAA6B;MAAAI,QAAA,gBAI3CrB,OAAA,CAACR,mBAAmB;QAClBkC,WAAW,EAAEjB,kBAAmB;QAChCJ,eAAe,EAAEA,eAAgB;QACjCsB,eAAe,EAAEZ,mBAAoB;QACrClB,SAAS,EAAEA,SAAU;QACrBD,aAAa,EAAEA;MAAc;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC,eAGFzB,OAAA,CAACP,oBAAoB;QACnBK,WAAW,EAAEA,WAAY;QACzB8B,aAAa,EAAEhB,oBAAoB,CAACiB,OAAO,CAAC,CAAC;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACvB,EAAA,CAxCID,UAAU;EAAA,QACKN,QAAQ;AAAA;AAAAmC,EAAA,GADvB7B,UAAU;AA0ChB,SAAS8B,GAAGA,CAAA,EAAG;EACb,oBACE/B,OAAA,CAACN,aAAa;IAAA2B,QAAA,eACZrB,OAAA,CAACC,UAAU;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEpB;AAACO,GAAA,GANQD,GAAG;AAQZ,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}